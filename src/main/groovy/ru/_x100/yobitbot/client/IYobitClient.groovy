package ru._x100.yobitbot.client

import ru._x100.yobitbot.enums.TradeOperation

interface IYobitClient {

    /**
     * info
     *
     * Пример запроса: https://yobit.net/api/3/info

     Пример ответа:

     {
         "server_time":1418654531,
         "pairs":{
             "ltc_btc":{
                 "decimal_places":8,
                 "min_price":0.00000001,
                 "max_price":10000,
                 "min_amount":0.0001,
                 "hidden":0,
                 "fee":0.2
             }
            ...
         }
     }
     decimal_places: количество разрешенных знаков после запятой
     min_price: минимальная разрешенная цена
     max_price: максимальная разрешенная цена
     min_amount: минимальное разрешенное количество для покупки или продажи
     hidden: пара скрыта (0 или 1)
     fee: комиссия пары
     Скрытые пары не отображаются в списке на главной странице биржи, но обмены по ней продолжают работать.
     При отключении какой-либо пары, она пропадет из списка.
     */
    Map info()

    /**
     * ticker
     Метод отдаёт статистическую информацию за последние 24 часа.

     Пример запроса: https://yobit.net/api/3/ticker/ltc_btc

     Пример ответа:

     {
         "ltc_btc": {
             "high": 105.41,
             "low": 104.67,
             "avg": 105.04,
             "vol": 43398.22251455,
             "vol_cur": 4546.26962359,
             "last": 105.11,
             "buy": 104.2,
             "sell": 105.11,
             "updated": 1418654531
        }
        ...
     }
     high: макcимальная цена
     low: минимальная цена
     avg: средняя цена
     vol: объем торгов
     vol_cur: объем торгов в валюте
     last: цена последней сделки
     buy: цена покупки
     sell: цена продажи
     updated: последнее обновление кэша
     */
    Map ticker(String pair)

    /**
     * depth
     Метод возвращает информацию о списках активных ордеров указанных пар.

     GET-параметр limit задаёт глубину для вывода (по умолчанию 150, максимум 2000).

     Пример запроса: https://yobit.net/api/3/depth/ltc_btc

     Пример ответа:

     {
         "ltc_btc":{
             "asks":[
                 [104.67,0.01],
                 [104.75,11],
                 [104.80,0.523],
                 ...
                 ],
             "bids":[
                 [104.3,5.368783],
                 [104.212,2.57357],
                 [103.62,0.43663336],
                 [103.61,0.7255672],
                 ...
             ]
        }
        ...
     }
     asks: ордера на продажу
     bids: ордера на покупку
     */
    Map depth(String pair, Integer limit)

    /**
     * trades
     Метод возвращает информацию о последних сделках указанных пар.

     GET-параметр limit задаёт глубину для вывода (по умолчанию 150, максимум 2000).

     Пример запроса: https://yobit.net/api/3/trades/ltc_btc

     Пример ответа:

     {
         "ltc_btc":[
             {
             "type":"ask",
             "price":104.2,
             "amount":0.101,
             "tid":41234426,
             "timestamp":1418654531
             },
             {
             "type":"bid",
             "price":103.53,
             "amount":1.51414,
             "tid":41234422,
             "timestamp":1418654530
             },
             ...
         ]
         ...
     }
     type: ask - продажа, bid - покупка
     price: цена покупки/продажи
     amount: количество
     tid: идентификатор сделки
     timestamp: unix time сделки
     */
    Map trades(String pair, Integer limit)

    /**
     * getInfo
     Метод возвращает информацию о балансах пользователя и привилегиях API-ключа, а так же время сервера.

     Требования: привилегия ключа info

     Параметры: отсутствуют

     Пример ответа:

     {
         "success":1,
         "return":{
             "funds":{
                 "ltc":22,
                 "nvc":423.998,
                 "ppc":10,
                 ...
             },
             "funds_incl_orders":{
                 "ltc":32,
                 "nvc":523.998,
                 "ppc":20,
                 ...
             },
             "rights":{
                 "info":1,
                 "trade":0,
                 "withdraw":0
             },
             "transaction_count":0,
             "open_orders":1,
             "server_time":1418654530
             }
     }
     funds: баланс аккаунта, доступный к использованию (не включает деньги на открытых ордерах)
     funds_incl_orders: баланс аккаунта, доступный к использованию (включает деньги на открытых ордерах)
     rights: привилегии ключа. withdraw не используется (зарезервировано)
     transaction_count: всегда 0 (устарело)
     open_orders: всегда 0 (устарело)
     server_time: время сервера
     */
    Map getAccountInfo()

    /**
     * Trade
     Метод, с помощью которого создаются новые ордера для торговли на бирже

     Требования: привилегии ключа info&trade

     Параметры:

     pair: пара (пример: ltc_btc)
     type: тип операции (пример: buy или sell)
     rate: курс, по которому необходимо купить или продать (значение: числовое)
     amount: количество, которое необходимо купить или продать (значение: числовое)
     Пример ответа:

     {
         "success":1,
         "return":{
             "received":0.1,
             "remains":0,
             "order_id":12345,
             "funds":{
                 "btc":15,
                 "ltc":51.82,
                 "nvc":0,
                 ...
             }
         }
     }
     received: сколько валюты куплено/продано
     remains: сколько валюты осталось купить/продать
     order_id: ID созданного ордера
     funds: балансы, актуальные после запроса
     */
    Map trade(String pair, TradeOperation type, BigDecimal rate, BigDecimal amount)

    /**
     * ActiveOrders
     Метод возвращает список активных ордеров пользователя

     Требования: привилегия ключа info

     Параметры:

     pair: пара (пример: ltc_btc)
     Пример ответа:

     {
         "success":1,
         "return":{
             "100025362":{
                 "pair":"ltc_btc",
                 "type":"sell",
                 "amount":21.615,
                 "rate":0.258,
                 "timestamp_created":1418654530,
                 "status":0
             },
             ...
         }
     }
     ключи массива: ID ордеров (в примере: 100025362)
     pair: пара (пример: ltc_btc)
     type: тип операции (пример: buy или sell)
     amount: осталось купить или продать
     rate: цена покупки или продажи
     timestamp_created: время создания ордера
     status: всегда 0 (устарел)
     */
    Map activeOrders(String pair)

    /**
     * OrderInfo
     Метод возвращает подробную информацию об указанном ордере

     Требования: привилегия ключа info

     Параметры:

     order_id: ID ордера (значения: числовые)
     Пример ответа:

     {
         "success":1,
         "return":{
             "100025362":{
                 "pair":ltc_btc,
                 "type":sell,
                 "start_amount":13.345,
                 "amount":12.345,
                 "rate":485,
                 "timestamp_created":1418654530,
                 "status":0
             }
         }
     }
     ключ массива: ID ордера (в примере: 100025362)
     pair: пара ордера (пример: ltc_btc)
     type: тип ордера (пример: buy или sell)
     start_amount: начальная сумма ордера при создании
     amount: осталось купить или продать по ордеру
     rate: цена покупки или продажи
     timestamp_created: время создания ордера
     status: 0 - активен, 1 - исполнен и закрыт, 2 - отменен, 3 - отменен, но был частично исполнен.
     */
    Map orderInfo(Long orderId)

    /**
     * CancelOrder
     Метод отменяет указанный ордер

     Требования: привилегии ключа info&trade

     Параметры:

     order_id: ID ордера (значения: числовые)
     Пример ответа:

     {
         "success":1,
         "return":{
             "order_id":100025362,
             "funds":{
                 "btc":15,
                 "ltc":51.82,
                 "nvc":0,
                 ...
             }
         }
     }
     order_id: ID ордера
     funds: балансы, актуальные после запроса
     */
    Map cancelOrder(Long orderId)
}
